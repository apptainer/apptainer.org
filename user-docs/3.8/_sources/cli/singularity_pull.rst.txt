.. _singularity_pull:

singularity pull
----------------

Pull an image from a URI

Synopsis
~~~~~~~~



  The 'pull' command allows you to download or build a container from a given
  URI. Supported URIs include:

  library: Pull an image from the currently configured library
      library://user/collection/container[:tag]

  docker: Pull a Docker/OCI image from Docker Hub, or another OCI registry.
      docker://user/image:tag
    
  shub: Pull an image from Singularity Hub
      shub://user/image:tag

  oras: Pull a SIF image from an OCI registry that supports ORAS.
      oras://registry/namespace/image:tag

  http, https: Pull an image using the http(s?) protocol
      https://library.sylabs.io/v1/imagefile/library/default/alpine:latest

::

  singularity pull [pull options...] [output file] <URI>

Examples
~~~~~~~~

::


    From Sylabs cloud library
    $ singularity pull alpine.sif library://alpine:latest

    From Docker
    $ singularity pull tensorflow.sif docker://tensorflow/tensorflow:latest

    From Shub
    $ singularity pull singularity-images.sif shub://vsoch/singularity-images

    From supporting OCI registry (e.g. Azure Container Registry)
    $ singularity pull image.sif oras://<username>.azurecr.io/namespace/image:tag

Options
~~~~~~~

::

      --arch string      architecture to pull from library (default "amd64")
      --dir string       download images to the specific directory
      --disable-cache    dont use cached images/blobs and dont create them
      --docker-login     login to a Docker Repository interactively
  -F, --force            overwrite an image file if it exists
  -h, --help             help for pull
      --library string   download images from the provided library
      --no-cleanup       do NOT clean up bundle after failed build, can be helpful for debugging
      --nohttps          do NOT use HTTPS with the docker:// transport (useful for local docker registries without a certificate)

SEE ALSO
~~~~~~~~

* :ref:`singularity <singularity>` 	 - 
Linux container platform optimized for High Performance Computing (HPC) and
Enterprise Performance Computing (EPC)

*Auto generated by spf13/cobra on 2-Jul-2021*
